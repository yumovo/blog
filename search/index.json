[{"content":"Razor Pages is a framework in ASP.NET Core aimed at simplifying page-based web application development. It uses Razor synatx to combine HTML and C# code, and each page has a paired model file(a .cshtml view and a .cshtml.cs code-behind) to keep UI and business logic together.\nRazor Pages offer a more streamlined approach, making them a good choice for content-driven applications like content management systems or personal website. This structure is also more beginner-friendly compared to ASP.NET MVC’s traditional approach.\nBasic Structure Each page in Razor Pages is represented by a .cshtml for UI and a .cshtml.cs for page logic.\nPage File(.cshtml): This is the view template that contains HTML and embedded C# for displaying data. Page Model(.cshtml.cs): This acts as the page’s code-behind file, handling request, business logic and data retrieval. Project Structure In a typical Razor Pages project, pages are located under the Pages folder, with a structure like this:\nMyRazorApp/ |-- Pages/ | |-- Index.cshtml # Main page file | |-- Index.cshtml.cs # Main page model file | |-- Contact/ # Contact page folder | | |-- Contact.cshtml # Contact page | | |-- Contact.cshtml.cs # Contact page model |-- Startup.cs # Configuration file |-- Program.cs # Application entry point Razor Syntax Overview Razor syntax uses @ symbol to embed C# code directly in HTML.\n@{ var currentDate = DateTime.Now; } \u0026lt;p\u0026gt;Today is: @currentDate\u0026lt;/p\u0026gt; Data Binding Data can be directly accessed from the Page Model in .cshtml view.\n@model MyRazorApp.Pages.IndexModel \u0026lt;h1\u0026gt;Welcome, @Model.Username!\u0026lt;/h1\u0026gt; \u0026lt;p\u0026gt;Your User ID is: @Model.UserId\u0026lt;/p\u0026gt; How Razor Pages Work Each page has its own Razor Page pair, with the .cshtml file for UI and .cshtml.cs file(Page Model) for logic.\nWhen a user requests a page like /index, the request routes to the IndexModel. The Page Model method(OnGet(), OnPost(), etc.) handles the request logic. The .cshtml view uses the model data to render the page, which is returned to the client. When to use Razor Pages Suitable for page-based web apps, like imformation sites. Ideal for small to medium-sized project that needs rapid development. In summary, Razor Pages are especially useful for simpler, content-focused applications or project that requires faster setup and less complexity than MVC.\n","date":"2024-11-09T17:45:20+08:00","image":"https://blog.mlavie.buzz/p/razor-pages-in-asp.net-core/image_hu7064723f2d5db08aaf4ae3f16a5eeb3d_365452_120x120_fill_box_smart1_3.png","permalink":"https://blog.mlavie.buzz/p/razor-pages-in-asp.net-core/","title":"Razor Pages in ASP.NET Core"},{"content":"When I was going to animate 3d joints to different characters to visualize some motions, I found that most of methods use bvh/fbx format. Not sure about the possibility so I check on the structure of bvh.\n.bvh Structure A BVH (Bounding Volume Hierarchy) is a tree structure on a set of geometric objects. It is widely used in animation.(Blender etc.) And the file contains ASCII text. There has 2 parts in total: ROOT, MOTION.\nHIERARCHY HIERARCHY is the HEAD keyword of .bvh file. Here is the BVH skeletal structure:\nROOT The first part of a BVH file identifies the Hips joint as the ROOT, which is to say it has no parent-joint. Below the ROOT section in the structure are JOINT sections, each containing information that specifies the location of the skeletal joint relative to its parent-joint. The relative location specifications for a parent-joint and its child-joint makes it possible to work out the length of the bone between the two joints. Where a joint has no child-joint, it is linked to an End Site section. The CHANNELS are for processing the time-framed sequence of translation and/or rotational co-ordinates provided in the second part of the BVH file.\nMOTION It is followed by information specifying, first, the number of FRAMES; second, the sampling rate per second after the keyword FRAME TIME; and third, a number of lines corresponding to the number of FRAMES, each line providing the tranlation and/or rotation co-ordinates to be processed according to the CHANNELS specifications in the first part of the file.\nCan 3d joint coordinates convert to BVH? Possible. But BVH requires joint angles, not (only) 3-D keypoints, so it\u0026rsquo;s not trivially possible. I found a method: video2bvh, which realized it. Not sure about the quality but worth a try.\n","date":"2023-10-01T00:00:00Z","image":"https://blog.mlavie.buzz/p/about-bvh/bvh-visual_hu7e8a4996a6df039f55b650f652dbceb5_100084_120x120_fill_q75_box_smart1.jpg","permalink":"https://blog.mlavie.buzz/p/about-bvh/","title":"About BVH"},{"content":"Install CUDA 11.6 Download CUDA Click this link and find the version you want. Here I chose CUDA Toolkit 11.6.0.\nInstallation Follow the installation instuction, run commands in Terminal.\nAs running the second command, just confirm \u0026lsquo;Continue\u0026rsquo;.\nDue to the warning above, we cancel the driver option, and install. Before that, I\u0026rsquo;ve tried to uninstall driver and re-install it cause I thought it was the version confliction of driver cause the warning. Thus CUDA was already installed, which is why this show up:\nConfirm \u0026lsquo;yes\u0026rsquo; and CUDA is installed!\nSet path The final step is set path according to the Summary in the last pic.\necho \u0026#39;# CUDA Soft Link\u0026#39; \u0026gt;\u0026gt; ~/.bashrc echo \u0026#39;export PATH=/usr/local/cuda-11.6/bin${PATH:+:${PATH}}\u0026#39; \u0026gt;\u0026gt; ~/.bashrc echo \u0026#39;export LD_LIBRARY_PATH=/usr/local/cuda-11.6/lib64${LD_LIBRARY_PATH:+:${LD_LIBRARY_PATH}}\u0026#39; \u0026gt;\u0026gt; ~/.bashrc source ~/.bashrc Check if CUDA is successfully installed Run \u0026rsquo;nvcc -V\u0026rsquo;.\nThat means a YES.\nInstall cuDNN8.4 Download Cudnn Click here and find the version you want. (Needs to sign up) Here I chose cuDNN v8.4.0.\nInstallation 1.Tar File Installation Decompress tar file, run the commands below to copy files into the folder where CUDA11.6 at.\nsudo cp cuda/include/cudnn*.h /usr/local/cuda-11.6/include sudo cp cuda/lib64/libcudnn* /usr/local/cuda-11.6/lib64 sudo chmod a+r /usr/local/cuda-11.6/include/cudnn.h /usr/local/cuda-11.6/lib64/libcudnn* 2.Debian Local Installation I downloaded .deb file. Navigate to your downloads directory containing the cuDNN Debian local installer file. Replace X.Y and 8.x.x.x with your specific CUDA and cuDNN versions before issuing the following commands.\n# Enable the local repository. sudo dpkg -i cudnn-local-repo-${distro}-8.x.x.x_1.0-1_amd64.deb # Import the CUDA GPG key. sudo cp /var/cudnn-local-repo-*/cudnn-local-*-keyring.gpg /usr/share/keyrings/ # Refresh the repository metadata. sudo apt-get update # Install the runtime library+developer library+code samples. sudo apt-get install libcudnn8=8.x.x.x-1+cudaX.Y sudo apt-get install libcudnn8-dev=8.x.x.x-1+cudaX.Y sudo apt-get install libcudnn8-samples=8.x.x.x-1+cudaX.Y Feels like this way used so many disk space. Don\u0026rsquo;t know why.\nVerifying the Install To verify that cuDNN is installed and is running properly, compile the mnistCUDNN sample located in the /usr/src/cudnnsamplesv8 directory in the Debian file.\ncp -r /usr/src/cudnn_samples_v8/ $HOME cd $HOME/cudnn_samples_v8/mnistCUDNN # Compile the mnistCUDNN sample. make clean \u0026amp;\u0026amp; make # Run the mnistCUDNN sample. ./mnistCUDNN Here maybe needs reboot. While compiling sample, there was a fatal error:\nSolution:\nsudo apt-get install libfreeimage3 libfreeimage-dev When you see \u0026lsquo;Test passed!\u0026rsquo;, cuDNN is properly installed and running on your Linux system.\nInstall Anaconda Here to download Anaconda. Then bash the .sh file you just downloaded.Following the instruction it gives you.\nAND I set this to false. All done. It\u0026rsquo;s quiet easy.\nReferences:\nhttps://docs.nvidia.com/deeplearning/cudnn/install-guide/index.html#install-linux\nhttps://cyfeng.science/2020/05/02/ubuntu-install-nvidia-driver-cuda-cudnn-suits/\nhttps://www.cnblogs.com/klchang/p/14353384.html\n","date":"2023-06-23T00:00:00Z","image":"https://blog.mlavie.buzz/p/cuda11.6--cudnn8.4--anaconda-installation-in-ubuntu20.04/CUDA_hu47a7f06e502f67bdf9088eb72806a71e_42029_120x120_fill_box_smart1_3.png","permalink":"https://blog.mlavie.buzz/p/cuda11.6--cudnn8.4--anaconda-installation-in-ubuntu20.04/","title":"CUDA11.6 + cuDNN8.4 + Anaconda  installation in Ubuntu20.04"}]