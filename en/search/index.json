[{"content":"When I was going to animate 3d joints to different characters to visualize some motions, I found that most of methods use bvh/fbx format. Not sure about the possibility so I check on the structure of bvh.\n.bvh Structure A BVH (Bounding Volume Hierarchy) is a tree structure on a set of geometric objects. It is widely used in animation.(Blender etc.) And the file contains ASCII text. There has 2 parts in total: ROOT, MOTION.\nHIERARCHY HIERARCHY is the HEAD keyword of .bvh file. Here is the BVH skeletal structure:\nROOT The first part of a BVH file identifies the Hips joint as the ROOT, which is to say it has no parent-joint. Below the ROOT section in the structure are JOINT sections, each containing information that specifies the location of the skeletal joint relative to its parent-joint. The relative location specifications for a parent-joint and its child-joint makes it possible to work out the length of the bone between the two joints. Where a joint has no child-joint, it is linked to an End Site section. The CHANNELS are for processing the time-framed sequence of translation and/or rotational co-ordinates provided in the second part of the BVH file.\nMOTION It is followed by information specifying, first, the number of FRAMES; second, the sampling rate per second after the keyword FRAME TIME; and third, a number of lines corresponding to the number of FRAMES, each line providing the tranlation and/or rotation co-ordinates to be processed according to the CHANNELS specifications in the first part of the file.\nCan 3d joint coordinates convert to BVH? Possible. But BVH requires joint angles, not (only) 3-D keypoints, so it\u0026rsquo;s not trivially possible. I found a method: video2bvh, which realized it. Not sure about the quality but worth a try.\n","date":"2023-10-01T00:00:00Z","image":"http://localhost:14331/p/about-bvh/bvh-visual_hu7e8a4996a6df039f55b650f652dbceb5_100084_120x120_fill_q75_box_smart1.jpg","permalink":"http://localhost:14331/p/about-bvh/","title":"About BVH"},{"content":"Emoji can be enabled in a Hugo project in a number of ways.\nThe emojify function can be called directly in templates or Inline Shortcodes.\nTo enable emoji globally, set enableEmoji to true in your site\u0026rsquo;s configuration and then you can type emoji shorthand codes directly in content files; e.g.\nðŸ™ˆ :see_no_evil: ðŸ™‰ :hear_no_evil: ðŸ™Š :speak_no_evil:\nThe Emoji cheat sheet is a useful reference for emoji shorthand codes.\nN.B. The above steps enable Unicode Standard emoji characters and sequences in Hugo, however the rendering of these glyphs depends on the browser and the platform. To style the emoji you can either use a third party emoji font or a font stack; e.g.\n.emoji { font-family: Apple Color Emoji, Segoe UI Emoji, NotoColorEmoji, Segoe UI Symbol, Android Emoji, EmojiSymbols; }","date":"2019-03-05T00:00:00Z","image":"http://localhost:14331/p/emoji-support/the-creative-exchange-d2zvqp3fpro-unsplash_huf941de4769045cdfa8c9ee7036519a2a_35369_120x120_fill_q75_box_smart1.jpg","permalink":"http://localhost:14331/p/emoji-support/","title":"Emoji Support"}]